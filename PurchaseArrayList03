
import java.util.ArrayList;
import java.util.LocalDate;

class purchaseArrayList {

    private ArrayList<Purchase> purchaseHolder = new ArrayList<Purchase>();

    //Takes 5 parameters and adds a purchase those values
    public void addPurchase(String item, StoreName store, double price, LocalDate date, PurchaseCatagory catagory) {
        Purchase newPurchase = new Purchase();
        newPurchase.setItemName(item);
        newPurchase.setStoreName(store);
        newPurchase.setItemPrice(price);
        newPurchase.setPurchaseDate(date);
        newPurchase.setPurchaseCategory(catagory);

        purchaseHolder.add(newPurchase);
    }

    //Get purchase method returns arraylist of potential purchases matching what parameters are taken
    public ArrayList getPurchase(String item, StoreName store, double price, LocalDate startDate, LocalDate endDate, PurchaseCatagory catagory) {
        ArrayList<Purchase> foundPurchase = new ArrayList<Purchase>();
        int i = 0;
        
        //isBoolean variables in place to determine whether the value is present when calling
        //If it is not, the value is switched to false
        //In iterating through the ArrayList of purchases below, if any of these booleans are true, will return true for entire field
        boolean isItemName, isStoreName, isPrice, isStartDate, isEndDate, isCatagory = true;
        if(item.equals("NULL")) {isItemName = false;}
        if(store.equals("NULL")) {isStoreName = false;}
        if(price == -1.0) {isPrice = false;}
        if(startDate == LocalDate.ofEpochDay(0)) {isStartDate = false;}
        if(endDate == LocalDate.now()) {isEndDate = false;}
        if(catagory.equals("NULL")) {isCatagory = false;}
        
        //Iterates through ArrayList of purchases for purchases meeting criteria, adds to foundPurchase ArrayList when match is found
        while (i < purchaseHolder.size()) {
            if ((purchaseHolder.get(i).getItemName().equals(item) || isItemName == false) && + 
                (purchaseHolder.get(i).getStoreName() == store || isStoreName == false) && +
                (purchaseHolder.get(i).getItemPrice == price || isPrice == false) && +
                ((purchaseHolder.get(i).getPurchaseDate().isAfter(startDate) && isEndDate = false) || (isStartDate = false && purchaseHolder.get(i).getPurchaseDate().isBefore(endDate) || (purchaseHolder.get(i).getPurchaseDate().isAfter(startDate) && purchaseHolder.get(i).getPurchaseDate().isBefore(endDate))) && +
                (purchaseHolder.get(i).getPurchaseCatagory() == catagory || isCatagory == false)) {
                foundPurchase.add(purchaseHolder.get(i));
            }
        }
        return foundPurchase;
    }
}
